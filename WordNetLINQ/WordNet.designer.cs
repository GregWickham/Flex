#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WordNet.Linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="wordnet")]
	public partial class WordNetDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSynset(Synset instance);
    partial void UpdateSynset(Synset instance);
    partial void DeleteSynset(Synset instance);
    partial void InsertSense(Sense instance);
    partial void UpdateSense(Sense instance);
    partial void DeleteSense(Sense instance);
    #endregion
		
		//public WordNetDataContext() : 
		//		base("Data Source=38.192.14.25,49170;Initial Catalog=wordnet;Persist Security Info=True" +
		//				";User ID=;Password=", mappingSource)
		//{
		//	OnCreated();
		//}
		
		public WordNetDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WordNetDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WordNetDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WordNetDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Synset> Synsets
		{
			get
			{
				return this.GetTable<Synset>();
			}
		}
		
		public System.Data.Linq.Table<Sense> Senses
		{
			get
			{
				return this.GetTable<Sense>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSynsets")]
	public partial class Synset : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Gloss;
		
		private char _POS;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGlossChanging(string value);
    partial void OnGlossChanged();
    partial void OnPOSChanging(char value);
    partial void OnPOSChanged();
    #endregion
		
		public Synset()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gloss", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Gloss
		{
			get
			{
				return this._Gloss;
			}
			set
			{
				if ((this._Gloss != value))
				{
					this.OnGlossChanging(value);
					this.SendPropertyChanging();
					this._Gloss = value;
					this.SendPropertyChanged("Gloss");
					this.OnGlossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POS", DbType="NChar(1) NOT NULL")]
		public char POS
		{
			get
			{
				return this._POS;
			}
			set
			{
				if ((this._POS != value))
				{
					this.OnPOSChanging(value);
					this.SendPropertyChanging();
					this._POS = value;
					this.SendPropertyChanged("POS");
					this.OnPOSChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSenses")]
	public partial class Sense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SynsetID;
		
		private int _WordNumber;
		
		private string _WordText;
		
		private char _POS;
		
		private int _SenseNumber;
		
		private int _TagCount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSynsetIDChanging(int value);
    partial void OnSynsetIDChanged();
    partial void OnWordNumberChanging(int value);
    partial void OnWordNumberChanged();
    partial void OnWordTextChanging(string value);
    partial void OnWordTextChanged();
    partial void OnPOSChanging(char value);
    partial void OnPOSChanged();
    partial void OnSenseNumberChanging(int value);
    partial void OnSenseNumberChanged();
    partial void OnTagCountChanging(int value);
    partial void OnTagCountChanged();
    #endregion
		
		public Sense()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SynsetID", DbType="Int NOT NULL")]
		public int SynsetID
		{
			get
			{
				return this._SynsetID;
			}
			set
			{
				if ((this._SynsetID != value))
				{
					this.OnSynsetIDChanging(value);
					this.SendPropertyChanging();
					this._SynsetID = value;
					this.SendPropertyChanged("SynsetID");
					this.OnSynsetIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WordNumber", DbType="Int NOT NULL")]
		public int WordNumber
		{
			get
			{
				return this._WordNumber;
			}
			set
			{
				if ((this._WordNumber != value))
				{
					this.OnWordNumberChanging(value);
					this.SendPropertyChanging();
					this._WordNumber = value;
					this.SendPropertyChanged("WordNumber");
					this.OnWordNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WordText", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string WordText
		{
			get
			{
				return this._WordText;
			}
			set
			{
				if ((this._WordText != value))
				{
					this.OnWordTextChanging(value);
					this.SendPropertyChanging();
					this._WordText = value;
					this.SendPropertyChanged("WordText");
					this.OnWordTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POS", DbType="NChar(1) NOT NULL")]
		public char POS
		{
			get
			{
				return this._POS;
			}
			set
			{
				if ((this._POS != value))
				{
					this.OnPOSChanging(value);
					this.SendPropertyChanging();
					this._POS = value;
					this.SendPropertyChanged("POS");
					this.OnPOSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenseNumber", DbType="Int NOT NULL")]
		public int SenseNumber
		{
			get
			{
				return this._SenseNumber;
			}
			set
			{
				if ((this._SenseNumber != value))
				{
					this.OnSenseNumberChanging(value);
					this.SendPropertyChanging();
					this._SenseNumber = value;
					this.SendPropertyChanged("SenseNumber");
					this.OnSenseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagCount", DbType="Int NOT NULL")]
		public int TagCount
		{
			get
			{
				return this._TagCount;
			}
			set
			{
				if ((this._TagCount != value))
				{
					this.OnTagCountChanging(value);
					this.SendPropertyChanging();
					this._TagCount = value;
					this.SendPropertyChanged("TagCount");
					this.OnTagCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
